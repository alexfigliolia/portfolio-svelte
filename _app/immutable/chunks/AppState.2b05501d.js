var x=Object.defineProperty;var W=(s,t,e)=>t in s?x(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var o=(s,t,e)=>(W(s,typeof t!="symbol"?t+"":t,e),e);import{d as v,w as n}from"./index.0624fa79.js";import{g as i}from"./scheduler.c607dd8c.js";function A(s){return(s==null?void 0:s.length)!==void 0?s:Array.from(s)}class I{static setShrinkDuration(t){return t<957?500:700}static setFlipDuration(){return 1e3}}const l=class l extends Map{constructor(){super(...arguments);o(this,"timers",new Set)}registerTask(e){const u=this.ID();this.set(u,e)}flushTasks(){for(const[e,u]of this)u(),this.delete(e)}defer(e,u){const c=setTimeout(()=>{const m=()=>{clearTimeout(c),this.timers.delete(c)},k=e();k instanceof Promise?k.then(()=>m()):m()},u);this.timers.add(c)}popTimers(){for(const e of this.timers)clearTimeout(e),this.timers.delete(e)}ID(){return(++l.AutoIncrementingID).toString()}};o(l,"AutoIncrementingID",-1);let f=l;const C=n("Home"),T=n("100%"),g=n("100vh"),p=n(1e3),h=n(!0),D=n(!1),S=n(3e3),r=n("flip-controller shrink flip-active"),w=v(p,s=>I.setShrinkDuration(s)),a=v(p,()=>I.setFlipDuration()),d=class d{static enter(){r.update(()=>"flip-controller shrink"),h.update(()=>!1),this.TaskQueue.defer(()=>{r.update(()=>"flip-controller"),this.TaskQueue.defer(()=>{this.TaskQueue.flushTasks()},i(a))},1e3)}static toggleMenu(){D.update(t=>!t)}static setDimensions(){p.update(()=>window.innerWidth);const t=`${window.innerHeight}px`;t!==i(g)&&g.update(()=>t);const e=`${window.innerWidth}px`;e!==i(T)&&T.update(()=>e)}static navigate(t){let e=0;i(D)&&(d.toggleMenu(),e=800),this.TaskQueue.defer(()=>{r.update(()=>"flip-controller shrink"),this.TaskQueue.defer(()=>{r.update(()=>"flip-controller shrink flip-active"),this.TaskQueue.defer(()=>{h.update(()=>!0)},i(a)/2),this.TaskQueue.defer(()=>{t().then(()=>{this.TaskQueue.defer(()=>{h.update(()=>!1),r.update(()=>"flip-controller shrink"),this.TaskQueue.defer(()=>{r.update(()=>"flip-controller"),this.TaskQueue.defer(()=>{this.TaskQueue.flushTasks()},i(w))},i(a))},1e3)})},i(a))},i(w))},e)}};o(d,"TaskQueue",new f);let Q=d;export{Q as A,S as a,A as e,r as f,g as h,h as l,D as m,C as p,p as r,T as w};
